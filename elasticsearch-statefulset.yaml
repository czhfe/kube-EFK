apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: logging

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elasticsearch
rules:
- apiGroups: [""]
  resources:
  - services
  - endpoints
  - namespaces
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elasticsearch
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: elasticsearch
subjects:
- kind: ServiceAccount
  name: elasticsearch
  namespace: logging

---

apiVersion: v1
kind: Service
metadata:
  namespace: logging
  name: elasticsearch
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: elasticsearch
  ports:
    - name: db
      port: 9200
      targetPort: db
      protocol: TCP
    - name: transport
      port: 9300
      targetPort: transport
      protocol: TCP

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch
  namespace: logging
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
  serviceName: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      serviceAccount: elasticsearch
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - elasticsearch
      initContainers:
        - name: init
          image: busybox
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:
            - sh
            - -c
            - |
              sysctl -w vm.max_map_count=262144
              ulimit -n 65536
              chown -R 1000:1000 /usr/share/elasticsearch/data
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.9.2
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        ports:
        - name: db
          containerPort: 9200
          protocol: TCP
        - name: transport
          containerPort: 9300
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 30
          timeoutSeconds: 30
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 1Gi
        volumeMounts:
          - name: elasticsearch-data
            mountPath: /usr/share/elasticsearch/data
        env:
          - name: ES_JAVA_OPTS
            value: "-Xmx1G -Xms1G"
          - name: cluster.name
            value: k8s-logs
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: discovery.seed_hosts
            value: elasticsearch-0.elasticsearch,elasticsearch-1.elasticsearch,elasticsearch-2.elasticsearch
          - name: cluster.initial_master_nodes
            value: elasticsearch-0,elasticsearch-1,elasticsearch-2
      volumes:
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: elasticsearch-data

  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
        namespace: logging
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: es-data
        resources:
          requests:
            storage: 100Gi

